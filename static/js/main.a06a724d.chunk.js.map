{"version":3,"sources":["components/Basket/basket.module.css","components/Products/products.module.css","cross.svg","util.js","components/Products/index.jsx","components/Basket/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","basket","product","meal","title","total","crossBtn","item","icon","itemTitle","__webpack_require__","p","util","num","Number","toFixed","toLocaleString","Products","_this","this","productItems","props","products","map","react_default","a","createElement","className","css","key","id","href","concat","onClick","e","handleAddToCart","src","sku","alt","details","price","Component","Basket","cartItems","length","reduce","c","count","style","marginLeft","float","handleRemoveFromCart","crossIcon","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","filter","localStorage","setItem","JSON","stringify","productAlreadyInCart","forEach","cp","push","objectSpread","listProducts","sort","b","size","filteredProducts","availableSizes","indexOf","toUpperCase","handleSortChange","target","value","handleSizeChange","_this2","getItem","parse","fetch","then","res","json","catch","err","data","Products_Products","Basket_Basket","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a06a724d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"basket\":\"basket_basket__27Fhu\",\"product\":\"basket_product__2dVx5\",\"meal\":\"basket_meal__1SuPm\",\"title\":\"basket_title__1lcmr\",\"total\":\"basket_total__1rz0j\",\"crossBtn\":\"basket_crossBtn__odwNW\",\"item\":\"basket_item__1TDXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"products_product__1hNBC\",\"icon\":\"products_icon__1J8oZ\",\"itemTitle\":\"products_itemTitle__GhQ5W\"};","module.exports = __webpack_public_path__ + \"static/media/cross.27e7c55d.svg\";","export default {\r\n    formatCurrency: function (num) {\r\n        return 'KGZ' + Number(num.toFixed(1)).toLocaleString() + ' ';\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport util from '../../util'\r\nimport css from './products.module.css'\r\n\r\nexport default class Products extends Component {\r\n\r\n    render() {\r\n        const productItems = this.props.products.map(product => (\r\n            <div className={css.product} key={product.id}>\r\n                    <a href={`#${product.id}`} onClick={(e) => this.props.handleAddToCart(e, product)}>\r\n                        <div className=\"icon\">\r\n                            <img className=\"icon\" src={`icons/${product.sku}`} alt={product.title} />\r\n                        </div>\r\n                    </a>\r\n\r\n                    <div className={css.details}>\r\n                        <div className={css.itemTitle}>{product.title}</div>\r\n                        <b>{util.formatCurrency(product.price)}</b>\r\n                    </div>\r\n\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                {productItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport util from '../../util'\r\nimport css from './basket.module.css'\r\nimport crossIcon from '../../cross.svg'\r\n\r\nexport default class Basket extends Component {\r\n    render() {\r\n        const { cartItems } = this.props;\r\n\r\n        return (\r\n            <div className={css.basket}>\r\n                {cartItems.length === 0\r\n                    ? \"Basket is empty\" :\r\n                    <h3>You have {cartItems.length} items in the basket. <hr /></h3>\r\n                }\r\n                <br />\r\n\r\n                <b>Sum: {util.formatCurrency(cartItems.reduce((a, c) => (a + c.price * c.count), 0))}</b>\r\n\r\n                {cartItems.length > 0 &&\r\n                    <div>\r\n                        <ul style={{ marginLeft: -25 }}>\r\n                            {cartItems.map(item => (\r\n                                <li className={css.meal} key={item.id}>\r\n\r\n                                    <div className={css.item}>\r\n                                        <b>{item.title}</b>\r\n                                    </div>\r\n\r\n                                    <span>\r\n                                        {item.count} * {util.formatCurrency(item.price)}\r\n                                    </span>\r\n\r\n                                    <button style={{ float: 'right' }} className={css.crossBtn}\r\n                                        onClick={(e) => this.props.handleRemoveFromCart(e, item)}>\r\n                                        <img src={crossIcon} alt=\"x\" />\r\n                                    </button>\r\n                                </li>))\r\n                            }\r\n                        </ul>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Products from \"./components/Products/index\";\r\nimport Basket from \"./components/Basket/index\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      size: \"\",\r\n      sort: \"\",\r\n      cartItems: [],\r\n      products: [],\r\n      filteredProducts: []\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    if (localStorage.getItem(\"cartItems\")) {\r\n      this.setState({\r\n        cartItems: JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      });\r\n    }\r\n\r\n    fetch(\"http://localhost:8000/products\")\r\n      .then(res => res.json())\r\n      .catch(err =>\r\n        fetch(\"db.json\")\r\n          .then(res => res.json())\r\n          .then(data => data.products)\r\n      )\r\n      .then(data => {\r\n        this.setState({ products: data });\r\n        this.listProducts();\r\n      });\r\n  }\r\n\r\n  handleRemoveFromCart = (e, product) => {\r\n    this.setState(state => {\r\n      const cartItems = state.cartItems.filter(a => a.id !== product.id);\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n      return { cartItems: cartItems };\r\n    });\r\n  };\r\n\r\n  handleAddToCart = (e, product) => {\r\n    this.setState(state => {\r\n      const cartItems = state.cartItems;\r\n      let productAlreadyInCart = false;\r\n\r\n      cartItems.forEach(cp => {\r\n        if (cp.id === product.id) {\r\n          cp.count += 1;\r\n          productAlreadyInCart = true;\r\n        }\r\n      });\r\n\r\n      if (!productAlreadyInCart) {\r\n        cartItems.push({ ...product, count: 1 });\r\n      }\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n      return { cartItems: cartItems };\r\n    });\r\n  };\r\n\r\n  listProducts = () => {\r\n    this.setState(state => {\r\n      if (state.sort !== \"\") {\r\n        state.products.sort((a, b) =>\r\n          state.sort === \"lowestprice\"\r\n            ? a.price > b.price\r\n              ? 1\r\n              : -1\r\n            : a.price < b.price\r\n              ? 1\r\n              : -1\r\n        );\r\n      } else {\r\n        state.products.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n      }\r\n      if (state.size !== \"\") {\r\n        return {\r\n          filteredProducts: state.products.filter(\r\n            a => a.availableSizes.indexOf(state.size.toUpperCase()) >= 0\r\n          )\r\n        };\r\n      }\r\n      return { filteredProducts: state.products };\r\n    });\r\n  };\r\n  handleSortChange = e => {\r\n    this.setState({ sort: e.target.value });\r\n    this.listProducts();\r\n  };\r\n  handleSizeChange = e => {\r\n    this.setState({ size: e.target.value });\r\n    this.listProducts();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"product-list\">\r\n          <h3>Food-menu order-box</h3>\r\n          <Products\r\n            products={this.state.filteredProducts}\r\n            handleAddToCart={this.handleAddToCart}\r\n          />\r\n        </div>\r\n\r\n        <Basket\r\n          cartItems={this.state.cartItems}\r\n          handleRemoveFromCart={this.handleRemoveFromCart}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}